.TH "apreq_status" 3 "4 May 2005" "Version 2.05-dev" "libapreq2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apreq_status \- STATUS
2.05-dev released on May 5, 2005.
.PP
Contributors looking for a mission:
.PP
.IP "\(bu" 2
just do an egrep on 'TODO' or 'XXX' and see what's there
.PP
.PP
CURRENT RELEASE NOTES:
.PP
.IP "\(bu" 2
This is a developer release, indicated by the '-dev' suffix on the version string. We believe the core interfaces to be stable, but some portions of the API may still need significant modification. Thus, binary/source compatibility may be broken from one developer release to the next. In particular the version numbering rules specified at
.PP
.PP
http://apr.apache.org/versioning.html
.PP
do not apply to developer releases.
.PP
RELEASE SHOWSTOPPERS:
.PP
.IP "\(bu" 2
The api docs are currently incorrect.
.PP
.PP
CURRENT VOTES:
.PP
.IP "\(bu" 2
Should we switch to EU::MM for determining the full path to perl? The problem is that some folks move their perl binary post-installation, but never adjust Config.pm. EU::MM is smart, by accepting a full path in $^X or by searching the user's $PATH for $^X, before resorting to Config.pm. However, if we change apreq2, we should also lobby test-dev to adopt the same solution for Apache::Test. Otherwise our test suite will likely fail, even though the rest of the perl build system will presumably still work.
.PP
.PP
+1: joes 0: -1:
.PP
TODO:
.PP
.IP "\(bu" 2
Dump automake, preferably replacing that with more stuff from httpd/apr's build system.
.PP
.PP
.IP "\(bu" 2
Introduce APR::Request::Parser and APR::Request::Hook. Implement Apache2::Request::new's UPLOAD_HOOK using them.
.PP
.PP
.IP "\(bu" 2
Move module/t to module/apache2/t.
.PP
.PP
.IP "\(bu" 2
Figure out how and where the apreq_xs_ headers, and typemap file, should be installed.
.PP
.PP
.IP "\(bu" 2
Write tests for the apache 1.3.x module.
.PP
.PP
.IP "\(bu" 2
Fix the broken make dependencies, especially in the module and glue subdirs. The libtool workaround (for OSX IIRC) that copies module/.libs to module/t is especially bogus.
.PP
.PP
.IP "\(bu" 2
Drop ExtUtils::XSBuilder as the C API is fairly stable now. The header parsing + xs generation stuff may be too difficult for the community to maintain over ordinary .xs files.
.PP
.PP
.IP "\(bu" 2
Round out the unit tests in library/t. Ideally each API function should have its own tests, and each possible error status should be both tested & documented. Also upgrade these tests to use the Apache::Test framework.
.PP
.PP
.IP "\(bu" 2
Add a 'memory_limit' setting to \fBapreq_parser_t\fP and \fBapreq_module_t\fP, which will control how much pool allocation the parser may use.
.PP
.PP
.IP "\(bu" 2
Add a 'header_limit' setting to control outgoing header size (mainly for baking cookies) instead of using a compiled-in limit.
.PP
.PP
.IP "\(bu" 2
in glue/perl/t/apreq/cgi.t on Win32, printing to the error log hangs if the strings involved are about 10000 in size. This doesn't occur in the env/cgi tests - why?
.PP
.PP
.IP "\(bu" 2
Why must fprintf(stderr, ...), rather than apr_file_printf(err, ...), be used on Win32 in cgi_log() of src/apreq_env.c?
.PP
.PP
.IP "\(bu" 2
Get env/ (Apache::Test) tests to work for --with-apache2-src option. Also add a test to configure that prevents simultaneous use of --with-apache2-src and --with-apache2-apxs.
.PP
.PP
.IP "\(bu" 2
symbol exports files:
.IP "  1." 6
aix needs .exp files
.PP

.PP
.PP
.IP "\(bu" 2
Install the html dox during 'make install'. Should we do this for the doxy manpages also?
.PP
.PP
.IP "\(bu" 2
Rework glue/perl build system to use apreq2-config instead of relying on paths like '../../src'.
.PP
.PP
OPEN ISSUES:
.PP
.IP "\(bu" 2
Should we bundle an apr-based 'application/xml' parser? If so, how should we parse the xml data into an apr_table?
.PP
.PP
.IP "\(bu" 2
Determine whether or not it's good for the perl glue to ever set the SvUTF8 flag on a param. The current code ties this action to the apreq_param_is_tainted flag.
.PP
.PP
.IP "\(bu" 2
Should we let hooks interrupt parsers via APREQ_ERROR_INTERRUPT? That'd need a delete_hook method to make interrupts a useful way of tuning parser behavior.
.PP
.PP
BUGS:
.PP
.IP "\(bu" 2
Fix build automake/libtool/autoconf build system so it works properly on OSX & AIX.
.PP
.PP
WISH LIST:
.PP
.IP "\(bu" 2
I [joes] wish folks would contribute some glue code for one of these:
.PP
.PP
.IP "\(bu" 2
php,
.IP "\(bu" 2
Rivet,
.IP "\(bu" 2
mod_dtcl,
.IP "\(bu" 2
mod_python,
.IP "\(bu" 2
mod_jk,
.IP "\(bu" 2
tomcat,
.IP "\(bu" 2
mod_ruby,
.IP "\(bu" 2
mod_parrot. 
.PP

